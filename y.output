State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | lvalue
    4    | NIL
    5    | STRING
    6    | BREAK
    7    | LPAREN expression_sequence RPAREN
    8    | function_call
    9    | arithmetic_exp
   10    | negation_exp
   11    | comparison_exp
   12    | boolean_exp
   13    | record_creation
   14    | array_creation
   15    | assignment_exp
   16    | if_statement
   17    | while_loop
   18    | for_loop
   19    | let_statement

   20 expression_sequence: ε
   21                    | exp exp_seq_tail

   22 exp_seq_tail: ε
   23             | SEMICOLON exp exp_seq_tail

   24 function_call: ID LPAREN function_args RPAREN

   25 function_args: ε
   26              | exp function_args_tail

   27 function_args_tail: ε
   28                   | COMMA exp function_args_tail

   29 arithmetic_exp: exp PLUS exp
   30               | exp MINUS exp
   31               | exp TIMES exp
   32               | exp DIVIDE exp

   33 negation_exp: MINUS exp

   34 comparison_exp: exp EQ exp
   35               | exp NEQ exp
   36               | exp GT exp
   37               | exp GE exp
   38               | exp LT exp
   39               | exp LE exp

   40 boolean_exp: exp AND exp
   41            | exp OR exp

   42 record_creation: ID LBRACE record_list RBRACE

   43 record_list: ε
   44            | ID EQ exp record_list_extension

   45 record_list_extension: ε
   46                      | COMMA ID EQ exp record_list_extension

   47 array_creation: ID LBRACK exp RBRACK OF exp

   48 assignment_exp: lvalue ASSIGN exp

   49 if_statement: IF exp THEN exp ELSE exp
   50             | IF exp THEN exp

   51 while_loop: WHILE exp DO exp

   52 for_loop: FOR ID ASSIGN exp TO exp DO exp

   53 let_statement: LET declaration_sequence IN expression_sequence END

   54 declaration_sequence: ε
   55                     | declaration declaration_sequence

   56 declaration: type_declaration
   57            | variable_declaration
   58            | function_declaration

   59 type_declaration: TYPE ID EQ type

   60 type: ID
   61     | LBRACE type_fields RBRACE
   62     | ARRAY OF ID

   63 type_fields: ε
   64            | ID COLON ID type_fields_extension

   65 type_fields_extension: ε
   66                      | COMMA ID COLON ID type_fields_extension

   67 variable_declaration: VAR ID ASSIGN exp
   68                     | VAR ID COLON ID ASSIGN exp

   69 function_declaration: FUNCTION ID LPAREN type_fields RPAREN EQ exp
   70                     | FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp

   71 lvalue: ID
   72       | lvalue DOT ID
   73       | lvalue LBRACK exp RBRACK


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 24 42 44 46 47 52 59 60 62 64 66 67 68 69 70 71 72
    STRING <sval> (259) 5
    INT <ival> (260) 2
    COMMA (261) 28 46 66
    COLON (262) 64 66 68 70
    SEMICOLON (263) 23
    LPAREN (264) 7 24 69 70
    RPAREN (265) 7 24 69 70
    LBRACK (266) 47 73
    RBRACK (267) 47 73
    LBRACE (268) 42 61
    RBRACE (269) 42 61
    DOT (270) 72
    PLUS (271) 29
    MINUS (272) 30 33
    TIMES (273) 31
    DIVIDE (274) 32
    EQ (275) 34 44 46 59 69 70
    NEQ (276) 35
    LT (277) 38
    LE (278) 39
    GT (279) 36
    GE (280) 37
    AND (281) 40
    OR (282) 41
    ASSIGN (283) 48 52 67 68
    ARRAY (284) 62
    IF (285) 49 50
    THEN (286) 49 50
    ELSE (287) 49
    WHILE (288) 51
    FOR (289) 52
    TO (290) 52
    DO (291) 51 52
    LET (292) 53
    IN (293) 53
    END (294) 53
    OF (295) 47 62
    BREAK (296) 6
    NIL (297) 4
    FUNCTION (298) 69 70
    VAR (299) 67 68
    TYPE (300) 59
    UMINUS (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program <exp> (48)
        on left: 1
        on right: 0
    exp <exp> (49)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
        on right: 1 21 23 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 44 46 47 48 49 50 51 52 67 68 69 70 73
    expression_sequence <expList> (50)
        on left: 20 21
        on right: 7 53
    exp_seq_tail <expList> (51)
        on left: 22 23
        on right: 21 23
    function_call <exp> (52)
        on left: 24
        on right: 8
    function_args <expList> (53)
        on left: 25 26
        on right: 24
    function_args_tail <expList> (54)
        on left: 27 28
        on right: 26 28
    arithmetic_exp <exp> (55)
        on left: 29 30 31 32
        on right: 9
    negation_exp <exp> (56)
        on left: 33
        on right: 10
    comparison_exp <exp> (57)
        on left: 34 35 36 37 38 39
        on right: 11
    boolean_exp <exp> (58)
        on left: 40 41
        on right: 12
    record_creation <exp> (59)
        on left: 42
        on right: 13
    record_list <efieldList> (60)
        on left: 43 44
        on right: 42
    record_list_extension <efieldList> (61)
        on left: 45 46
        on right: 44 46
    array_creation <exp> (62)
        on left: 47
        on right: 14
    assignment_exp <exp> (63)
        on left: 48
        on right: 15
    if_statement <exp> (64)
        on left: 49 50
        on right: 16
    while_loop <exp> (65)
        on left: 51
        on right: 17
    for_loop <exp> (66)
        on left: 52
        on right: 18
    let_statement <exp> (67)
        on left: 53
        on right: 19
    declaration_sequence <decList> (68)
        on left: 54 55
        on right: 53 55
    declaration <dec> (69)
        on left: 56 57 58
        on right: 55
    type_declaration <dec> (70)
        on left: 59
        on right: 56
    type <ty> (71)
        on left: 60 61 62
        on right: 59
    type_fields <fieldList> (72)
        on left: 63 64
        on right: 61 69 70
    type_fields_extension <fieldList> (73)
        on left: 65 66
        on right: 64 66
    variable_declaration <dec> (74)
        on left: 67 68
        on right: 57
    function_declaration <fundec> (75)
        on left: 69 70
        on right: 58
    lvalue <var> (76)
        on left: 71 72 73
        on right: 3 48 72 73


State 0

    0 $accept: • program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program          go to state 12
    exp              go to state 13
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 1

   24 function_call: ID • LPAREN function_args RPAREN
   42 record_creation: ID • LBRACE record_list RBRACE
   47 array_creation: ID • LBRACK exp RBRACK OF exp
   71 lvalue: ID •

    LPAREN  shift, and go to state 27
    LBRACK  shift, and go to state 28
    LBRACE  shift, and go to state 29

    LBRACK    [reduce using rule 71 (lvalue)]
    $default  reduce using rule 71 (lvalue)

    shift/reduce conflict on token LBRACK:
       71 lvalue: ID •
       47 array_creation: ID • LBRACK exp RBRACK OF exp
      First example: ID • LBRACK exp RBRACK OF exp $end
      Shift derivation
        $accept
        ↳ 0: program                                        $end
             ↳ 1: exp
                  ↳ 14: array_creation
                        ↳ 47: ID • LBRACK exp RBRACK OF exp
      Second example: ID • LBRACK exp RBRACK $end
      Reduce derivation
        $accept
        ↳ 0: program                                      $end
             ↳ 1: exp
                  ↳ 3: lvalue
                       ↳ 73: lvalue     LBRACK exp RBRACK
                             ↳ 71: ID •



State 2

    5 exp: STRING •

    $default  reduce using rule 5 (exp)


State 3

    2 exp: INT •

    $default  reduce using rule 2 (exp)


State 4

    7 exp: LPAREN • expression_sequence RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 20 (expression_sequence)

    exp                  go to state 30
    expression_sequence  go to state 31
    function_call        go to state 14
    arithmetic_exp       go to state 15
    negation_exp         go to state 16
    comparison_exp       go to state 17
    boolean_exp          go to state 18
    record_creation      go to state 19
    array_creation       go to state 20
    assignment_exp       go to state 21
    if_statement         go to state 22
    while_loop           go to state 23
    for_loop             go to state 24
    let_statement        go to state 25
    lvalue               go to state 26


State 5

   33 negation_exp: MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 32
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 6

   49 if_statement: IF • exp THEN exp ELSE exp
   50             | IF • exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 33
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 7

   51 while_loop: WHILE • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 34
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 8

   52 for_loop: FOR • ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 35


State 9

   53 let_statement: LET • declaration_sequence IN expression_sequence END

    FUNCTION  shift, and go to state 36
    VAR       shift, and go to state 37
    TYPE      shift, and go to state 38

    $default  reduce using rule 54 (declaration_sequence)

    declaration_sequence  go to state 39
    declaration           go to state 40
    type_declaration      go to state 41
    variable_declaration  go to state 42
    function_declaration  go to state 43


State 10

    6 exp: BREAK •

    $default  reduce using rule 6 (exp)


State 11

    4 exp: NIL •

    $default  reduce using rule 4 (exp)


State 12

    0 $accept: program • $end

    $end  shift, and go to state 44


State 13

    1 program: exp •
   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 1 (program)


State 14

    8 exp: function_call •

    $default  reduce using rule 8 (exp)


State 15

    9 exp: arithmetic_exp •

    $default  reduce using rule 9 (exp)


State 16

   10 exp: negation_exp •

    $default  reduce using rule 10 (exp)


State 17

   11 exp: comparison_exp •

    $default  reduce using rule 11 (exp)


State 18

   12 exp: boolean_exp •

    $default  reduce using rule 12 (exp)


State 19

   13 exp: record_creation •

    $default  reduce using rule 13 (exp)


State 20

   14 exp: array_creation •

    $default  reduce using rule 14 (exp)


State 21

   15 exp: assignment_exp •

    $default  reduce using rule 15 (exp)


State 22

   16 exp: if_statement •

    $default  reduce using rule 16 (exp)


State 23

   17 exp: while_loop •

    $default  reduce using rule 17 (exp)


State 24

   18 exp: for_loop •

    $default  reduce using rule 18 (exp)


State 25

   19 exp: let_statement •

    $default  reduce using rule 19 (exp)


State 26

    3 exp: lvalue •
   48 assignment_exp: lvalue • ASSIGN exp
   72 lvalue: lvalue • DOT ID
   73       | lvalue • LBRACK exp RBRACK

    LBRACK  shift, and go to state 57
    DOT     shift, and go to state 58
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 3 (exp)


State 27

   24 function_call: ID LPAREN • function_args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 25 (function_args)

    exp              go to state 60
    function_call    go to state 14
    function_args    go to state 61
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 28

   47 array_creation: ID LBRACK • exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 62
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 29

   42 record_creation: ID LBRACE • record_list RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 43 (record_list)

    record_list  go to state 64


State 30

   21 expression_sequence: exp • exp_seq_tail
   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48
    EQ         shift, and go to state 49
    NEQ        shift, and go to state 50
    LT         shift, and go to state 51
    LE         shift, and go to state 52
    GT         shift, and go to state 53
    GE         shift, and go to state 54
    AND        shift, and go to state 55
    OR         shift, and go to state 56

    $default  reduce using rule 22 (exp_seq_tail)

    exp_seq_tail  go to state 66


State 31

    7 exp: LPAREN expression_sequence • RPAREN

    RPAREN  shift, and go to state 67


State 32

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   33 negation_exp: MINUS exp •
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    $default  reduce using rule 33 (negation_exp)


State 33

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   49 if_statement: IF exp • THEN exp ELSE exp
   50             | IF exp • THEN exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    THEN    shift, and go to state 68


State 34

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   51 while_loop: WHILE exp • DO exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    DO      shift, and go to state 69


State 35

   52 for_loop: FOR ID • ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


State 36

   69 function_declaration: FUNCTION • ID LPAREN type_fields RPAREN EQ exp
   70                     | FUNCTION • ID LPAREN type_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 71


State 37

   67 variable_declaration: VAR • ID ASSIGN exp
   68                     | VAR • ID COLON ID ASSIGN exp

    ID  shift, and go to state 72


State 38

   59 type_declaration: TYPE • ID EQ type

    ID  shift, and go to state 73


State 39

   53 let_statement: LET declaration_sequence • IN expression_sequence END

    IN  shift, and go to state 74


State 40

   55 declaration_sequence: declaration • declaration_sequence

    FUNCTION  shift, and go to state 36
    VAR       shift, and go to state 37
    TYPE      shift, and go to state 38

    $default  reduce using rule 54 (declaration_sequence)

    declaration_sequence  go to state 75
    declaration           go to state 40
    type_declaration      go to state 41
    variable_declaration  go to state 42
    function_declaration  go to state 43


State 41

   56 declaration: type_declaration •

    $default  reduce using rule 56 (declaration)


State 42

   57 declaration: variable_declaration •

    $default  reduce using rule 57 (declaration)


State 43

   58 declaration: function_declaration •

    $default  reduce using rule 58 (declaration)


State 44

    0 $accept: program $end •

    $default  accept


State 45

   29 arithmetic_exp: exp PLUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 76
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 46

   30 arithmetic_exp: exp MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 77
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 47

   31 arithmetic_exp: exp TIMES • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 78
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 48

   32 arithmetic_exp: exp DIVIDE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 79
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 49

   34 comparison_exp: exp EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 80
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 50

   35 comparison_exp: exp NEQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 81
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 51

   38 comparison_exp: exp LT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 82
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 52

   39 comparison_exp: exp LE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 83
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 53

   36 comparison_exp: exp GT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 84
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 54

   37 comparison_exp: exp GE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 85
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 55

   40 boolean_exp: exp AND • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 86
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 56

   41 boolean_exp: exp OR • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 87
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 57

   73 lvalue: lvalue LBRACK • exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 88
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 58

   72 lvalue: lvalue DOT • ID

    ID  shift, and go to state 89


State 59

   48 assignment_exp: lvalue ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 90
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 60

   26 function_args: exp • function_args_tail
   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 27 (function_args_tail)

    function_args_tail  go to state 92


State 61

   24 function_call: ID LPAREN function_args • RPAREN

    RPAREN  shift, and go to state 93


State 62

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   47 array_creation: ID LBRACK exp • RBRACK OF exp

    RBRACK  shift, and go to state 94
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56


State 63

   44 record_list: ID • EQ exp record_list_extension

    EQ  shift, and go to state 95


State 64

   42 record_creation: ID LBRACE record_list • RBRACE

    RBRACE  shift, and go to state 96


State 65

   23 exp_seq_tail: SEMICOLON • exp exp_seq_tail

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 97
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 66

   21 expression_sequence: exp exp_seq_tail •

    $default  reduce using rule 21 (expression_sequence)


State 67

    7 exp: LPAREN expression_sequence RPAREN •

    $default  reduce using rule 7 (exp)


State 68

   49 if_statement: IF exp THEN • exp ELSE exp
   50             | IF exp THEN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 98
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 69

   51 while_loop: WHILE exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 99
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 70

   52 for_loop: FOR ID ASSIGN • exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 100
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 71

   69 function_declaration: FUNCTION ID • LPAREN type_fields RPAREN EQ exp
   70                     | FUNCTION ID • LPAREN type_fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 101


State 72

   67 variable_declaration: VAR ID • ASSIGN exp
   68                     | VAR ID • COLON ID ASSIGN exp

    COLON   shift, and go to state 102
    ASSIGN  shift, and go to state 103


State 73

   59 type_declaration: TYPE ID • EQ type

    EQ  shift, and go to state 104


State 74

   53 let_statement: LET declaration_sequence IN • expression_sequence END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 20 (expression_sequence)

    exp                  go to state 30
    expression_sequence  go to state 105
    function_call        go to state 14
    arithmetic_exp       go to state 15
    negation_exp         go to state 16
    comparison_exp       go to state 17
    boolean_exp          go to state 18
    record_creation      go to state 19
    array_creation       go to state 20
    assignment_exp       go to state 21
    if_statement         go to state 22
    while_loop           go to state 23
    for_loop             go to state 24
    let_statement        go to state 25
    lvalue               go to state 26


State 75

   55 declaration_sequence: declaration declaration_sequence •

    $default  reduce using rule 55 (declaration_sequence)


State 76

   29 arithmetic_exp: exp • PLUS exp
   29               | exp PLUS exp •
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 29 (arithmetic_exp)


State 77

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   30               | exp MINUS exp •
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 30 (arithmetic_exp)


State 78

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   31               | exp TIMES exp •
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    $default  reduce using rule 31 (arithmetic_exp)


State 79

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   32               | exp DIVIDE exp •
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    $default  reduce using rule 32 (arithmetic_exp)


State 80

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   34               | exp EQ exp •
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (comparison_exp)


State 81

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   35               | exp NEQ exp •
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (comparison_exp)


State 82

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   38               | exp LT exp •
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (comparison_exp)


State 83

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   39               | exp LE exp •
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (comparison_exp)


State 84

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   36               | exp GT exp •
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (comparison_exp)


State 85

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   37               | exp GE exp •
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (comparison_exp)


State 86

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   40            | exp AND exp •
   41            | exp • OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    OR      shift, and go to state 56

    $default  reduce using rule 40 (boolean_exp)


State 87

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   41            | exp OR exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54

    $default  reduce using rule 41 (boolean_exp)


State 88

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   73 lvalue: lvalue LBRACK exp • RBRACK

    RBRACK  shift, and go to state 106
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56


State 89

   72 lvalue: lvalue DOT ID •

    $default  reduce using rule 72 (lvalue)


State 90

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   48 assignment_exp: lvalue ASSIGN exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 48 (assignment_exp)


State 91

   28 function_args_tail: COMMA • exp function_args_tail

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 107
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 92

   26 function_args: exp function_args_tail •

    $default  reduce using rule 26 (function_args)


State 93

   24 function_call: ID LPAREN function_args RPAREN •

    $default  reduce using rule 24 (function_call)


State 94

   47 array_creation: ID LBRACK exp RBRACK • OF exp

    OF  shift, and go to state 108


State 95

   44 record_list: ID EQ • exp record_list_extension

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 109
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 96

   42 record_creation: ID LBRACE record_list RBRACE •

    $default  reduce using rule 42 (record_creation)


State 97

   23 exp_seq_tail: SEMICOLON exp • exp_seq_tail
   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48
    EQ         shift, and go to state 49
    NEQ        shift, and go to state 50
    LT         shift, and go to state 51
    LE         shift, and go to state 52
    GT         shift, and go to state 53
    GE         shift, and go to state 54
    AND        shift, and go to state 55
    OR         shift, and go to state 56

    $default  reduce using rule 22 (exp_seq_tail)

    exp_seq_tail  go to state 110


State 98

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   49 if_statement: IF exp THEN exp • ELSE exp
   50             | IF exp THEN exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    ELSE    shift, and go to state 111

    $default  reduce using rule 50 (if_statement)


State 99

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   51 while_loop: WHILE exp DO exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 51 (while_loop)


State 100

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   52 for_loop: FOR ID ASSIGN exp • TO exp DO exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    TO      shift, and go to state 112


State 101

   69 function_declaration: FUNCTION ID LPAREN • type_fields RPAREN EQ exp
   70                     | FUNCTION ID LPAREN • type_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 113

    $default  reduce using rule 63 (type_fields)

    type_fields  go to state 114


State 102

   68 variable_declaration: VAR ID COLON • ID ASSIGN exp

    ID  shift, and go to state 115


State 103

   67 variable_declaration: VAR ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 116
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 104

   59 type_declaration: TYPE ID EQ • type

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    type  go to state 120


State 105

   53 let_statement: LET declaration_sequence IN expression_sequence • END

    END  shift, and go to state 121


State 106

   73 lvalue: lvalue LBRACK exp RBRACK •

    $default  reduce using rule 73 (lvalue)


State 107

   28 function_args_tail: COMMA exp • function_args_tail
   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 27 (function_args_tail)

    function_args_tail  go to state 122


State 108

   47 array_creation: ID LBRACK exp RBRACK OF • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 123
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 109

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   44 record_list: ID EQ exp • record_list_extension

    COMMA   shift, and go to state 124
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 45 (record_list_extension)

    record_list_extension  go to state 125


State 110

   23 exp_seq_tail: SEMICOLON exp exp_seq_tail •

    $default  reduce using rule 23 (exp_seq_tail)


State 111

   49 if_statement: IF exp THEN exp ELSE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 126
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 112

   52 for_loop: FOR ID ASSIGN exp TO • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 127
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 113

   64 type_fields: ID • COLON ID type_fields_extension

    COLON  shift, and go to state 128


State 114

   69 function_declaration: FUNCTION ID LPAREN type_fields • RPAREN EQ exp
   70                     | FUNCTION ID LPAREN type_fields • RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 129


State 115

   68 variable_declaration: VAR ID COLON ID • ASSIGN exp

    ASSIGN  shift, and go to state 130


State 116

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   67 variable_declaration: VAR ID ASSIGN exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 67 (variable_declaration)


State 117

   60 type: ID •

    $default  reduce using rule 60 (type)


State 118

   61 type: LBRACE • type_fields RBRACE

    ID  shift, and go to state 113

    $default  reduce using rule 63 (type_fields)

    type_fields  go to state 131


State 119

   62 type: ARRAY • OF ID

    OF  shift, and go to state 132


State 120

   59 type_declaration: TYPE ID EQ type •

    $default  reduce using rule 59 (type_declaration)


State 121

   53 let_statement: LET declaration_sequence IN expression_sequence END •

    $default  reduce using rule 53 (let_statement)


State 122

   28 function_args_tail: COMMA exp function_args_tail •

    $default  reduce using rule 28 (function_args_tail)


State 123

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   47 array_creation: ID LBRACK exp RBRACK OF exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 47 (array_creation)


State 124

   46 record_list_extension: COMMA • ID EQ exp record_list_extension

    ID  shift, and go to state 133


State 125

   44 record_list: ID EQ exp record_list_extension •

    $default  reduce using rule 44 (record_list)


State 126

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   49 if_statement: IF exp THEN exp ELSE exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 49 (if_statement)


State 127

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   52 for_loop: FOR ID ASSIGN exp TO exp • DO exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    DO      shift, and go to state 134


State 128

   64 type_fields: ID COLON • ID type_fields_extension

    ID  shift, and go to state 135


State 129

   69 function_declaration: FUNCTION ID LPAREN type_fields RPAREN • EQ exp
   70                     | FUNCTION ID LPAREN type_fields RPAREN • COLON ID EQ exp

    COLON  shift, and go to state 136
    EQ     shift, and go to state 137


State 130

   68 variable_declaration: VAR ID COLON ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 138
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 131

   61 type: LBRACE type_fields • RBRACE

    RBRACE  shift, and go to state 139


State 132

   62 type: ARRAY OF • ID

    ID  shift, and go to state 140


State 133

   46 record_list_extension: COMMA ID • EQ exp record_list_extension

    EQ  shift, and go to state 141


State 134

   52 for_loop: FOR ID ASSIGN exp TO exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 142
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 135

   64 type_fields: ID COLON ID • type_fields_extension

    COMMA  shift, and go to state 143

    $default  reduce using rule 65 (type_fields_extension)

    type_fields_extension  go to state 144


State 136

   70 function_declaration: FUNCTION ID LPAREN type_fields RPAREN COLON • ID EQ exp

    ID  shift, and go to state 145


State 137

   69 function_declaration: FUNCTION ID LPAREN type_fields RPAREN EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 146
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 138

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   68 variable_declaration: VAR ID COLON ID ASSIGN exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 68 (variable_declaration)


State 139

   61 type: LBRACE type_fields RBRACE •

    $default  reduce using rule 61 (type)


State 140

   62 type: ARRAY OF ID •

    $default  reduce using rule 62 (type)


State 141

   46 record_list_extension: COMMA ID EQ • exp record_list_extension

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 147
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 142

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   52 for_loop: FOR ID ASSIGN exp TO exp DO exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 52 (for_loop)


State 143

   66 type_fields_extension: COMMA • ID COLON ID type_fields_extension

    ID  shift, and go to state 148


State 144

   64 type_fields: ID COLON ID type_fields_extension •

    $default  reduce using rule 64 (type_fields)


State 145

   70 function_declaration: FUNCTION ID LPAREN type_fields RPAREN COLON ID • EQ exp

    EQ  shift, and go to state 149


State 146

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   69 function_declaration: FUNCTION ID LPAREN type_fields RPAREN EQ exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 69 (function_declaration)


State 147

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   46 record_list_extension: COMMA ID EQ exp • record_list_extension

    COMMA   shift, and go to state 124
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 45 (record_list_extension)

    record_list_extension  go to state 150


State 148

   66 type_fields_extension: COMMA ID • COLON ID type_fields_extension

    COLON  shift, and go to state 151


State 149

   70 function_declaration: FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 152
    function_call    go to state 14
    arithmetic_exp   go to state 15
    negation_exp     go to state 16
    comparison_exp   go to state 17
    boolean_exp      go to state 18
    record_creation  go to state 19
    array_creation   go to state 20
    assignment_exp   go to state 21
    if_statement     go to state 22
    while_loop       go to state 23
    for_loop         go to state 24
    let_statement    go to state 25
    lvalue           go to state 26


State 150

   46 record_list_extension: COMMA ID EQ exp record_list_extension •

    $default  reduce using rule 46 (record_list_extension)


State 151

   66 type_fields_extension: COMMA ID COLON • ID type_fields_extension

    ID  shift, and go to state 153


State 152

   29 arithmetic_exp: exp • PLUS exp
   30               | exp • MINUS exp
   31               | exp • TIMES exp
   32               | exp • DIVIDE exp
   34 comparison_exp: exp • EQ exp
   35               | exp • NEQ exp
   36               | exp • GT exp
   37               | exp • GE exp
   38               | exp • LT exp
   39               | exp • LE exp
   40 boolean_exp: exp • AND exp
   41            | exp • OR exp
   70 function_declaration: FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp •

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 70 (function_declaration)


State 153

   66 type_fields_extension: COMMA ID COLON ID • type_fields_extension

    COMMA  shift, and go to state 143

    $default  reduce using rule 65 (type_fields_extension)

    type_fields_extension  go to state 154


State 154

   66 type_fields_extension: COMMA ID COLON ID type_fields_extension •

    $default  reduce using rule 66 (type_fields_extension)
